// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnippetSyncBackend.Data;

#nullable disable

namespace SnippetSyncBackend.Migrations
{
    [DbContext(typeof(SnippetContext))]
    [Migration("20240530183539_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("CodeSnippetTag", b =>
                {
                    b.Property<int>("CodeSnippetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CodeSnippetId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("CodeSnippetTag");

                    b.HasData(
                        new
                        {
                            CodeSnippetId = 1,
                            TagId = 1
                        },
                        new
                        {
                            CodeSnippetId = 2,
                            TagId = 2
                        },
                        new
                        {
                            CodeSnippetId = 3,
                            TagId = 3
                        });
                });

            modelBuilder.Entity("SnippetSyncBackend.Models.CodeSnippet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CodeSnippets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Console.WriteLine(\"Hello, World!\");",
                            Language = "C#",
                            Title = "Hello World in C#"
                        },
                        new
                        {
                            Id = 2,
                            Code = "console.log(\"Hello, World!\");",
                            Language = "JavaScript",
                            Title = "Hello World in JavaScript"
                        },
                        new
                        {
                            Id = 3,
                            Code = "print(\"Hello, World!\")",
                            Language = "Python",
                            Title = "Hello World in Python"
                        });
                });

            modelBuilder.Entity("SnippetSyncBackend.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Python"
                        });
                });

            modelBuilder.Entity("CodeSnippetTag", b =>
                {
                    b.HasOne("SnippetSyncBackend.Models.CodeSnippet", null)
                        .WithMany()
                        .HasForeignKey("CodeSnippetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SnippetSyncBackend.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
